# Generated migration for initial glossary data

from django.db import migrations


def create_initial_data(apps, schema_editor):
    GlossaryCategory = apps.get_model('glossary', 'GlossaryCategory')
    GlossaryTerm = apps.get_model('glossary', 'GlossaryTerm')
    FAQ = apps.get_model('glossary', 'FAQ')
    
    # Create glossary categories
    categories_data = [
        ('Медицинские термины', 'Основные медицинские термины и понятия'),
        ('Заболевания', 'Распространенные заболевания и их определения'),
        ('Процедуры', 'Медицинские процедуры и обследования'),
        ('Общие вопросы', 'Часто задаваемые вопросы о работе центра'),
    ]
    
    categories = {}
    for name, description in categories_data:
        category = GlossaryCategory.objects.create(
            name=name,
            description=description
        )
        categories[name] = category
    
    # Create glossary terms
    terms_data = [
        ('Анамнез', 'Совокупность сведений о больном и его заболевании, полученных путем опроса', 'Медицинские термины'),
        ('Диагностика', 'Процесс определения болезни путем обследования больного', 'Медицинские термины'),
        ('Профилактика', 'Комплекс мероприятий, направленных на предупреждение заболеваний', 'Медицинские термины'),
        ('Симптом', 'Признак болезни, отклонения от нормального течения процессов жизнедеятельности', 'Медицинские термины'),
        ('Терапия', 'Лечение заболеваний консервативными (безоперационными) методами', 'Медицинские термины'),
        
        ('Гипертония', 'Стойкое повышение артериального давления', 'Заболевания'),
        ('Диабет', 'Хроническое заболевание, характеризующееся повышенным уровнем глюкозы в крови', 'Заболевания'),
        ('Гастрит', 'Воспаление слизистой оболочки желудка', 'Заболевания'),
        ('Остеохондроз', 'Дегенеративно-дистрофическое поражение позвоночника', 'Заболевания'),
        
        ('УЗИ', 'Ультразвуковое исследование - метод диагностики с использованием ультразвуковых волн', 'Процедуры'),
        ('ЭКГ', 'Электрокардиография - метод исследования работы сердца', 'Процедуры'),
        ('Флюорография', 'Рентгенологическое исследование органов грудной клетки', 'Процедуры'),
        ('Анализ крови', 'Лабораторное исследование крови для оценки состояния здоровья', 'Процедуры'),
    ]
    
    for term, definition, category_name in terms_data:
        GlossaryTerm.objects.create(
            term=term,
            definition=definition,
            category=categories.get(category_name)
        )
    
    # Create FAQs
    faqs_data = [
        ('Как записаться на прием к врачу?', 
         'Вы можете записаться на прием через наш сайт в разделе "Услуги", выбрав нужного специалиста, или позвонив по телефону +375 (12) 345-67-89.',
         'Общие вопросы', 1),
        
        ('Какие документы нужны для первого визита?',
         'Для первого визита необходимо иметь при себе паспорт и страховой полис (если имеется). Если у вас есть результаты предыдущих обследований, возьмите их с собой.',
         'Общие вопросы', 2),
        
        ('Работаете ли вы в выходные дни?',
         'Да, наш медицинский центр работает 7 дней в неделю, включая выходные и праздничные дни. Часы работы: пн-пт с 8:00 до 20:00, сб-вс с 9:00 до 18:00.',
         'Общие вопросы', 3),
        
        ('Можно ли получить результаты анализов онлайн?',
         'Да, вы можете получить результаты анализов в личном кабинете на нашем сайте. Результаты будут доступны в течение 24-48 часов после сдачи анализов.',
         'Общие вопросы', 4),
        
        ('Есть ли у вас программы медицинского страхования?',
         'Да, мы работаем с большинством страховых компаний. Уточнить список можно у администратора или в разделе "Страхование" на нашем сайте.',
         'Общие вопросы', 5),
        
        ('Как подготовиться к УЗИ?',
         'Подготовка зависит от типа УЗИ. Для УЗИ брюшной полости необходимо не есть за 6-8 часов до процедуры. Подробные рекомендации вы получите при записи.',
         'Общие вопросы', 6),
        
        ('Можно ли вызвать врача на дом?',
         'Да, мы предоставляем услугу вызова врача на дом. Для этого позвоните по телефону +375 (12) 345-67-89 и оставьте заявку.',
         'Общие вопросы', 7),
        
        ('Какие способы оплаты вы принимаете?',
         'Мы принимаем наличные, банковские карты, а также безналичную оплату по счету для юридических лиц.',
         'Общие вопросы', 8),
    ]
    
    for question, answer, category_name, order in faqs_data:
        FAQ.objects.create(
            question=question,
            answer=answer,
            category=categories.get(category_name),
            order=order,
            is_published=True
        )


class Migration(migrations.Migration):

    dependencies = [
        ('glossary', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_initial_data),
    ]
